dist: trusty
language: ruby
services:
- docker

before_install:
# If an encryption key exists, this will decrypt the service-account key.
# m-lab repo
- if [[ -n "$encrypted_5e545a9d5aeb_iv" ]] ; then
  openssl aes-256-cbc -d
  -K $encrypted_9bceeca3f3aa_key -iv $encrypted_9bceeca3f3aa_iv
  -in $TRAVIS_BUILD_DIR/travis/legacy-rpm-writer.json.m-lab
  -out /tmp/legacy-rpm-writer.json -d ; fi
# gfr10598 fork
- if [[ -n "$encrypted_9bceeca3f3aa_iv" ]] ; then
  openssl aes-256-cbc -d
  -K $encrypted_9bceeca3f3aa_key -iv $encrypted_9bceeca3f3aa_iv
  -in $TRAVIS_BUILD_DIR/travis/legacy-rpm-writer.json.gfr10598
  -out /tmp/legacy-rpm-writer.json ; fi

script:
# TODO - change to :latest
- docker pull gcr.io/mlab-sandbox/github-m-lab-builder:travis
- ls
# This runs build_npad.sh in the docker container, providing the
# repository and branch to build.
- docker run
  -v `pwd`/slicebase-i386:/root/builder/build/slicebase-i386
  -v `pwd`/bin:/root/bin
  gcr.io/mlab-sandbox/github-m-lab-builder:travis
  /root/bin/build_npad.sh $TRAVIS_REPO_SLUG $TRAVIS_BRANCH

# NB: Travis has a Google AppEngine (gae) provider, however it does not work
# # here (unknown).
deploy:
# gfr SANDBOX: before code review for development code in a specific branch.
 - provider: script
   script: $TRAVIS_BUILD_DIR/travis/deploy.sh /tmp/legacy-rpm-writer.json gfr
   skip_cleanup: true
   on:
     repo: gfr10598/npad-support
     all_branches: true

# STAGING: When master branch also has a tag, deploy to cloud storage.
 - provider: script
   script: $TRAVIS_BUILD_DIR/travis/deploy.sh /tmp/legacy-rpm-writer.json staging
   skip_cleanup: true
   on:
     repo: m-lab/npad-support
     branch: master
     tags: true
