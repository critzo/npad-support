dist: trusty
language: ruby
services:
- docker


before_install:
# If an encryption key exists, this will decrypt the service-account key.
# m-lab repo
- if [[ -n "$encrypted_5e545a9d5aeb_iv" ]] ; then
  openssl aes-256-cbc -d
  -K $encrypted_9bceeca3f3aa_key -iv $encrypted_9bceeca3f3aa_iv
  -in $TRAVIS_BUILD_DIR/travis/legacy-rpm-writer.json.m-lab
  -out /tmp/legacy-rpm-writer.json -d ; fi
# gfr10598 fork
- if [[ -n "$encrypted_9bceeca3f3aa_iv" ]] ; then
  openssl aes-256-cbc -d
  -K $encrypted_9bceeca3f3aa_key -iv $encrypted_9bceeca3f3aa_iv
  -in $TRAVIS_BUILD_DIR/travis/legacy-rpm-writer.json.gfr10598
  -out /tmp/legacy-rpm-writer.json ; fi

script:
# TODO - change to :latest
# This script builds the rpm using the docker container, getting
# the build params from the travis environment variables.
- $TRAVIS_BUILD_DIR/travis/container_build.sh

# TODO: Travis has GCS deployment, so we should probably try using that
# instead of script.
deploy:
# TESTING: before code review for development in forked repos.
 - provider: script
   script: $TRAVIS_BUILD_DIR/travis/deploy.sh /tmp/legacy-rpm-writer.json testing
   skip_cleanup: true
   on:
     all_branches: true
     condition: $TRAVIS_EVENT = push && $TRAVIS_REPO_SLUG != m-lab/npad-support

# PULL REQUESTS: All pull requests will push to pull-request folder.
 - provider: script
   script: $TRAVIS_BUILD_DIR/travis/deploy.sh /tmp/legacy-rpm-writer.json pull-request
   skip_cleanup: true
   on:
     condition: $TRAVIS_EVENT = pull_request

# UNTAGGED: Main repo, master branch, but untagged.
 - provider: script
   script: $TRAVIS_BUILD_DIR/travis/deploy.sh /tmp/legacy-rpm-writer.json untagged
   skip_cleanup: true
   on:
     repo: m-lab/npad-support
     branch: master
     tags: false

# STAGING: Main repo, master branch, with tag --> deploy to staging.
 - provider: script
   script: $TRAVIS_BUILD_DIR/travis/deploy.sh /tmp/legacy-rpm-writer.json staging
   skip_cleanup: true
   on:
     repo: m-lab/npad-support
     branch: master
     tags: true
